@page "/envelopes"
@rendermode InteractiveServer
@using Budget.Shared
@using Budget.Shared.Models
@using Budget.Shared.Services
<h1>Envelopes!</h1>
@if (_loading)
{
  <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center" Class="pa-4">
    <MudProgressCircular Indeterminate="true" Color="Color.Primary"/>
  </MudStack>
}
else if (!string.IsNullOrEmpty(_loadError))
{
  <MudAlert Severity="Severity.Error">Failed to load: @_loadError</MudAlert>
}
else
{
  <MudContainer MaxWidth="MaxWidth.False" Class="pa-2 envelope-page-container">
    <MudStack Spacing="2" Class="envelope-page-stack">
      <MudPaper Elevation="0" Class="sb-property-border">
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2" Class="pa-2">
          <MudSelect T="int?" Label="Choose Category" Variant="Variant.Outlined" Dense="true"
                     @bind-Value="SelectedCategoryId" @bind-Value:after="@(() => _ = CatChanged(SelectedCategoryId))">
            @foreach (var c in Cats)
            {
              <MudSelectItem @key="c.CategoryId" Value="@((int?)c.CategoryId)">@c.CategoryName</MudSelectItem>
            }
          </MudSelect>
        </MudStack>
      </MudPaper>
      <MudGrid Class="envelope-grid-grow">
        <MudItem >
          <MudPaper Elevation="0" Class="h-100 d-flex flex-column">
            <MudTable Items="@SelectedEnvelopeData" Hover="true" Dense="true" FixedHeader="true" Height="100%" OnRowClick="@((TableRowClickEventArgs<EnvelopeResult> e) => OnEnvelopeRowClick(e))" @bind-SelectedItem="SelectedEnvelope" RowStyleFunc="GetEnvelopeRowStyle" Class="envelopes-table flex-grow-1">
              <HeaderContent>
                <MudTh></MudTh>
                <MudTh>Category</MudTh>
                <MudTh>Envelope</MudTh>
                <MudTh class="text-end">Balance</MudTh>
                <MudTh></MudTh>
              </HeaderContent>
              <RowTemplate >
                <MudTd>
                  <MudIconButton Icon="@Icons.Material.Filled.Add"
                                 Size="Size.Small"
                                 Variant="Variant.Outlined"
                                 Color="Color.Primary"
                                 OnClick="@(() => NewTransactionAsync(context.EnvelopeId))"/>
                </MudTd>
                <MudTd DataLabel="Category">@context.CategoryName</MudTd>
                <MudTd DataLabel="Envelope">@context.EnvelopeName</MudTd>
                <MudTd DataLabel="Balance" Class="text-end">@context.Balance.ToString("N2")</MudTd>
                <MudTd>
                  <MudIconButton Icon="@Icons.Material.Filled.ReadMore"
                                 Size="Size.Small"
                                 Variant="Variant.Outlined"
                                 Color="Color.Primary"
                                 OnClick="@(() => SelectedEnvelope = context)"/>
                </MudTd>
              </RowTemplate>
            </MudTable>
          </MudPaper>
        </MudItem>
        <MudItem>
          <MudPaper Elevation="0" Class="mt-3 h-100 d-flex flex-column">
            <MudTable Items="@TransactionData" Hover="true" Dense="true" OnRowClick="@( (TableRowClickEventArgs<TransactionDto> e) => OnTransactionRowClick(e) )" FixedHeader="true" Height="100%" Class="flex-grow-1">
              <HeaderContent>
                <MudTh>Line#</MudTh>
                <MudTh>Vendor</MudTh>
                <MudTh>Description</MudTh>
                <MudTh class="text-end">Amount</MudTh>
              </HeaderContent>
              <RowTemplate>
                <MudTd DataLabel="Line#">@context.LineId</MudTd>
                <MudTd DataLabel="Vendor">@context.Vendor</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>
                <MudTd DataLabel="Amount" Class="text-end">@context.Amount.ToString("N2")</MudTd>
              </RowTemplate>
              <NoRecordsContent>
                <MudText Color="Color.Secondary">Nothing to show</MudText>
              </NoRecordsContent>
            </MudTable>
          </MudPaper>
        </MudItem>
      </MudGrid>
    </MudStack>
  </MudContainer>
}