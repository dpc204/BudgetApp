@using Budget.Shared.Models
@using Budget.Shared.Services
@inject IBudgetMaintApiClient MaintApi

<h3>Envelope Details</h3>
<hr />
@if (_envelope is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <dl class="row">
        <dt class="col-sm-2">CategoryId</dt>
        <dd class="col-sm-10">@_envelope.CategoryId</dd>
        <dt class="col-sm-2">Name</dt>
        <dd class="col-sm-10">@_envelope.Name</dd>
        <dt class="col-sm-2">Budget</dt>
        <dd class="col-sm-10">@_envelope.Budget</dd>
        <dt class="col-sm-2">Balance</dt>
        <dd class="col-sm-10">@_envelope.Balance</dd>
        <dt class="col-sm-2">Description</dt>
        <dd class="col-sm-10">@_envelope.Description</dd>
        <dt class="col-sm-2">SortOrder</dt>
        <dd class="col-sm-10">@_envelope.SortOrder</dd>
    </dl>
    <button class="btn btn-secondary" @onclick="() => OnClose.InvokeAsync()">Close</button>
}

@code {
    [Parameter] public int Id { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private EnvelopeDto? _envelope;

    protected override async Task OnParametersSetAsync()
    {
        var list = await MaintApi.GetEnvelopesDtoAsync();
        _envelope = list.FirstOrDefault(e => e.Id == Id);
    }
}
