@attribute [AllowAnonymous]
@page "/Account/Login"
@using Budget.Web.Data
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity

@inject SignInManager<BudgetUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<HeadContent>
    <meta name="blazor-enhanced-nav" content="none" />
</HeadContent>

<PageTitle>Log in</PageTitle>

<h1>Log in</h1>
<div class="row">
    <div class="col-md-4">
        <section>
            <StatusMessage Message="@errorMessage" />
            <!-- Submit to server endpoint so auth cookies can be set safely -->
            <form action="Account/Login" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="returnUrl" value="@ReturnUrl" />
                <h2>Use a local account to log in.</h2>
                <hr />
                <div class="form-floating mb-3">
                    <input name="email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label for="email" class="form-label">Email</label>
                </div>
                <div class="form-floating mb-3">
                    <input name="password" type="password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label for="password" class="form-label">Password</label>
                </div>
                <div class="checkbox mb-3">
                    <label class="form-label">
                        <input name="rememberMe" value="true" type="checkbox" class="darker-border-checkbox form-check-input" />
                        Remember me
                    </label>
                </div>
                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                </div>
                <div class="mt-3">
                    <p>
                        <a href="Account/ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))">Register as a new user</a>
                    </p>
                    <p>
                        <a href="Account/ResendEmailConfirmation">Resend email confirmation</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to log in.</h3>
            <hr />
            <ExternalLoginPicker />
        </section>
    </div>
</div>

@code {
    private string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("Login page initializing. Current URL: {CurrentUrl}, ReturnUrl: {ReturnUrl}", 
            NavigationManager.Uri, ReturnUrl);

        try
        {
            var method = HttpContext?.Request?.Method;
            if (!string.IsNullOrEmpty(method) && HttpMethods.IsGet(method))
            {
                await HttpContext!.SignOutAsync(IdentityConstants.ExternalScheme);
            }
        }
        catch (Exception ex)
        {
            Logger.LogDebug(ex, "Skipping external scheme sign-out");
        }
    }
}
  